# -*- coding: utf-8 -*-
"""Exercicio_21_03_2023.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oa_7K5XvTH-vV-00tz2WiKmaC_K1mOqB

# Programa de Capacitaçao com Residência Tecnologica - PUC-Campinas/CPQD

Data(aula):21/03/2023 (aula assincrona)

Curso: Ciência (2023/1/M23111)

Aluna: Sara Bandeira Coutinho
"""

#Exercicio 1 

"""
Objetivo: ler o valor do produto e apontar o percentual minimo de lucro de acordo com a tabela fornecida na questao.

Entrada: valor do produto em float 
Processamento: verificar o % de lucro dependendo do valor
Saida: imprimir o % de lucro 

"""
def main():
  #entradas
  vp= float(input("Digite o valor do produto: "))
  
  #processamento
  if vp < 25.0:
    print("Lucro de 100%")                #saida
  elif vp >= 25.0 and vp < 100.0:
    print("Lucro de 70%")                 #saida
  elif vp >= 100.0 and vp < 500.0:
    print("Lucro de 60%")                 #saida
  elif vp >= 500.0 and vp < 1000.0:
    print("Lucro de 50%")                 #saida
  else:
    print("Lucro de 40%")

#Valor 5
if __name__ == "__main__":
  main()

#Valor 25
if __name__ == "__main__":
  main()

#Valor 100
if __name__ == "__main__":
  main()

#Valor 750
if __name__ == "__main__":
  main()

#Valor 1000
if __name__ == "__main__":
  main()

#Exercicio 2 

"""Objetivo: ler n valores recebidos e imprimir o médio, maior e menor

Entrada: n valores 
Processamento: verificar o maior, menor e o médio
Saida: imprimir os valores do menor, médio e maior indicando cada um

Observaçao: Assumiu-se os valores como float a fim de generalizar pra inteiros ou reais. 

"""

def main():
  #entrada
  x, y, z = input().split()
  x, y, z = float(x), float(y), float(z)

  #processamento
  maior = max(x, y, z)
  menor = min(x, y, z)

  if x != maior and x != menor:
    medio = x
  elif y != maior and y != menor:
    medio = y 
  else: 
    medio = z

  #saida
  print("O menor valor é: ", menor,", O valor médio é: ", medio, ", O valor maior é: ", maior, "." )

if __name__ == "__main__":
  main()